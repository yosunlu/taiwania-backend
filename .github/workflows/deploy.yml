name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Updated to use Node.js 20 to avoid deprecation warnings

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}  # Corrected to use environment variables
        with:
          skip-logout: true  # Optional: skips logging out after the job completes

      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: taiwania
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update ECS service with new image
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
          ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECS_TASK_DEFINITION: ${{ secrets.ECS_TASK_DEFINITION }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Create a new task definition JSON file from the template
          TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION)
          NEW_TASK_DEFINITION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$ECR_REGISTRY/taiwania:$IMAGE_TAG" '.taskDefinition.containerDefinitions[0].image=$IMAGE')
          echo $NEW_TASK_DEFINITION > new-task-def.json

          # Register the new task definition
          aws ecs register-task-definition --cli-input-json file://new-task-def.json

          # Update the ECS service with the new task definition
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
